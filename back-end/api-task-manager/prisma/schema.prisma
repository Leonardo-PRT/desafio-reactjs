generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String
  tasks       Task[]
  UserProject UserProject[]
  Project     Project[]

  @@map("tb_user")
}

model Project {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  tasks       Task[]
  User        User?  @relation(fields: [ownerId], references: [id])
  ownerId     Int?

  UserProject UserProject[]

  @@map("tb_project")
}

model UserProject {
  id Int @id @default(autoincrement())

  User   User? @relation(fields: [userId], references: [id])
  userId Int?

  Project   Project? @relation(fields: [projectId], references: [id])
  projectId Int?

  @@map("rl_user_project")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  description String
  createdAt   DateTime  @default(now())
  status      TaskStaus
  projectId   Int
  project     Project   @relation(fields: [projectId], references: [id])
  User        User?     @relation(fields: [userId], references: [id])
  userId      Int?
  TaskTag     TaskTag[]

  @@map("tb_task")
}

model Tag {
  id      Int       @id @default(autoincrement())
  title   String
  TaskTag TaskTag[]

  @@map("tb_tag")
}

model TaskTag {
  taskId Int
  tagId  Int

  task Task @relation(fields: [taskId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@id([taskId, tagId])
  @@map("tb_task_tag")
}

enum TaskStaus {
  Pending
  InProgress
  Done
}
